{
  "name": "hrpolicy-action",
  "type": "action",
  "valid": true,
  "status": "Available",
  "created": "2025-05-16T11:31:45.009Z",
  "updated": "2025-05-19T06:36:48.446Z",
  "language": "en",
  "skill_id": "655d71d7-2e93-4595-b465-205f2a20b4a2",
  "workspace": {
    "actions": [
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_588",
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.text"
                  },
                  "skill_variable": "user_query"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_588",
            "next_step": "step_927"
          },
          {
            "step": "step_927",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "[]"
                  },
                  "skill_variable": "transformed_history"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_927",
            "next_step": "step_668"
          },
          {
            "step": "step_668",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${num_turns} + 2"
                  },
                  "skill_variable": "num_turns"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_668",
            "next_step": "step_445"
          },
          {
            "step": "step_445",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${system_session_history}[${num_turns} - 4][\"u\"]"
                  },
                  "skill_variable": "previous_user"
                },
                {
                  "value": {
                    "expression": "${system_session_history}[${num_turns} - 3][\"a\"]"
                  },
                  "skill_variable": "previous_assistant"
                },
                {
                  "value": {
                    "expression": "[{\"role\": \"user\", \"content\" : \"${previous_user}\"}, {\"role\":  \"assistant\", \"content\": \"${previous_assistant}\"}, {\"role\":\"user\",\"content\": \"${user_query} \"}]"
                  },
                  "skill_variable": "messages"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_445",
            "condition": {
              "gt": [
                {
                  "skill_variable": "num_turns"
                },
                {
                  "scalar": "2"
                }
              ]
            },
            "next_step": "step_566"
          },
          {
            "step": "step_566",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "[{\"role\":\"user\",\"content\":\"${user_query}\"}]"
                  },
                  "skill_variable": "messages"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_566",
            "condition": {
              "lte": [
                {
                  "skill_variable": "num_turns"
                },
                {
                  "scalar": "2"
                }
              ]
            },
            "next_step": "step_463"
          },
          {
            "step": "step_463",
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/ml/v4/deployments/{deployment_id}/ai_service",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "f253a52a28259f7963bf9d1bbc405957964fc54bd4bb8bf6fff8a6856a5a3289",
                  "match_scenario": 10,
                  "catalog_item_id": "8a8ac216-f1e0-4a2c-9b73-9ea933e06e1d"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "expression": "${messages}"
                      },
                      "parameter": "messages"
                    }
                  ],
                  "path": [
                    {
                      "value": {
                        "scalar": "2a0b107a-6786-4838-99e2-3db3f3700424"
                      },
                      "parameter": "deployment_id"
                    }
                  ],
                  "query": [
                    {
                      "value": {
                        "scalar": "2023-05-01"
                      },
                      "parameter": "version"
                    }
                  ]
                },
                "result_variable": "step_463_result_1"
              }
            },
            "variable": "step_463",
            "next_step": "step_765"
          },
          {
            "step": "step_765",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": ""
                          },
                          {
                            "skill_variable": "model_output"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_463_result_1.body.choices}[0][\"message\"][\"content\"]"
                  },
                  "skill_variable": "model_output"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_765",
            "next_step": "step_698"
          },
          {
            "step": "step_698",
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_698"
          }
        ],
        "title": "HR Policy",
        "action": "action_47419",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_47419_intent_6552"
        },
        "variables": [
          {
            "title": "",
            "privacy": {
              "enabled": false
            },
            "variable": "step_445",
            "data_type": "any"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": false
            },
            "variable": "step_463",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_463_result_1",
            "data_type": "any"
          },
          {
            "title": "",
            "privacy": {
              "enabled": false
            },
            "variable": "step_566",
            "data_type": "any"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": false
            },
            "variable": "step_588",
            "data_type": "any"
          },
          {
            "title": "",
            "privacy": {
              "enabled": false
            },
            "variable": "step_668",
            "data_type": "any"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": false
            },
            "variable": "step_698",
            "data_type": "any"
          },
          {
            "title": "{variable}",
            "privacy": {
              "enabled": false
            },
            "variable": "step_765",
            "data_type": "any"
          },
          {
            "title": "",
            "privacy": {
              "enabled": false
            },
            "variable": "step_927",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "fallback",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. Please rephrase your question."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001",
            "condition": {
              "lte": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": ""
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "fallback",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_002_result_1"
              }
            },
            "variable": "step_002",
            "condition": {
              "gt": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            }
          }
        ],
        "title": "No matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "I am afraid I do not understand what you are asking, please re-p",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "variable": "step_002_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "digression_failure",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't confirm if you wanted to return to previous topic, let me connect to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "digression_failure",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Failed to confirm topic return"
                }
              ]
            },
            "next_step": "step_001"
          },
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. I can connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't assist you. I will connect you to an agent right away."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_003"
          },
          {
            "step": "step_003",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            },
            "next_step": "step_004"
          },
          {
            "step": "step_004",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_004",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Danger word detected"
                }
              ]
            },
            "next_step": "step_005"
          },
          {
            "step": "step_005",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_005",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Profanity detected"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "Topic return failed",
            "variable": "digression_failure",
            "data_type": "any"
          },
          {
            "title": "I'm afraid I don't understand. I can connect you to an agent.",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "I am afraid I do not understand what you are asking, let me conn",
            "variable": "step_003",
            "data_type": "any"
          },
          {
            "title": "It seems this conversation would be best managed",
            "variable": "step_004",
            "data_type": "any"
          },
          {
            "title": "Profanity - It seems this conversation",
            "variable": "step_005",
            "data_type": "any"
          }
        ],
        "next_action": "run_always",
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "danger_word_detected",
            "title": "Connect to agent",
            "handlers": [],
            "resolver": {
              "type": "fallback"
            },
            "variable": "danger_word_detected_variable",
            "condition": {
              "entity": "danger_words"
            },
            "next_step": "profanity_detected"
          },
          {
            "step": "profanity_detected",
            "title": "Show warning",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please use appropriate language when interacting with the assistant."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [
              {
                "type": "max_hits",
                "handler": "max_hits_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "max_hits": 2,
            "resolver": {
              "type": "end_action"
            },
            "variable": "profanity_detected_variable",
            "condition": {
              "entity": "profane_words"
            }
          }
        ],
        "title": "Trigger word detected",
        "action": "run_always",
        "boosts": [],
        "handlers": [],
        "variables": [
          {
            "title": "Profanity detected",
            "variable": "danger_word_detected_variable",
            "data_type": "any"
          },
          {
            "title": "Profane word detected",
            "variable": "profanity_detected_variable",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else"
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": []
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "title": "",
            "privacy": {
              "enabled": false
            },
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_47419",
        "disambiguation_opt_out": true
      }
    ],
    "intents": [
      {
        "intent": "action_47419_intent_6552",
        "examples": [
          {
            "text": "HR Policy"
          },
          {
            "text": "test"
          },
          {
            "text": "พนักงานเข้าทำงานกี่โมง"
          },
          {
            "text": "พนักงานหญิงลาคลอดได้กี่วัน"
          },
          {
            "text": "พนักงานหยุดได้กี่วัน"
          },
          {
            "text": "วันลามีกี่ประเภท"
          }
        ]
      },
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "Agent help"
          },
          {
            "text": "Call agent"
          },
          {
            "text": "Can I connect to an agent?"
          },
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "I would like to speak to someone"
          }
        ],
        "description": "Please transfer me to an agent"
      }
    ],
    "entities": [
      {
        "entity": "danger_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "profane_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "sys-yes-no",
        "values": []
      }
    ],
    "metadata": {
      "api_version": {
        "major_version": "v2",
        "minor_version": "2018-11-08"
      }
    },
    "variables": [
      {
        "title": "history",
        "privacy": {
          "enabled": false
        },
        "variable": "history",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "messages",
        "privacy": {
          "enabled": false
        },
        "variable": "messages",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "model_output",
        "privacy": {
          "enabled": false
        },
        "variable": "model_output",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "num_turns",
        "privacy": {
          "enabled": false
        },
        "variable": "num_turns",
        "data_type": "number",
        "description": "",
        "initial_value": {
          "scalar": 0
        }
      },
      {
        "title": "previous_assistant",
        "privacy": {
          "enabled": false
        },
        "variable": "previous_assistant",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "previous_assistant_2",
        "privacy": {
          "enabled": false
        },
        "variable": "previous_assistant_2",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "previous_user",
        "privacy": {
          "enabled": false
        },
        "variable": "previous_user",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "previous_user_2",
        "privacy": {
          "enabled": false
        },
        "variable": "previous_user_2",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "transformed_history",
        "privacy": {
          "enabled": false
        },
        "variable": "transformed_history",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "user_query",
        "privacy": {
          "enabled": false
        },
        "variable": "user_query",
        "data_type": "any",
        "description": ""
      }
    ],
    "data_types": [],
    "collections": [],
    "counterexamples": [],
    "system_settings": {
      "variable": {
        "format": {
          "time": {
            "pattern": "short"
          },
          "currency": {
            "fraction_digits": 2
          }
        }
      },
      "off_topic": {
        "enabled": true
      },
      "auto_learn": {
        "apply": true
      },
      "topic_switch": {
        "enabled": true,
        "messages": {
          "enable_confirmation": true,
          "confirmation_failure": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "I'm sorry, I did not catch that, please confirm."
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          },
          "confirmation_request": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Do you want to continue with the previous topic: "
                        },
                        {
                          "system_variable": "digressed_from"
                        },
                        {
                          "scalar": "?"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              },
              {
                "options": [
                  {
                    "label": "Yes",
                    "value": {
                      "input": {
                        "text": "Yes"
                      }
                    }
                  },
                  {
                    "label": "No",
                    "value": {
                      "input": {
                        "text": "No"
                      }
                    }
                  }
                ],
                "response_type": "option",
                "repeat_on_reprompt": true
              }
            ]
          }
        },
        "max_tries": 3
      },
      "generative_ai": {
        "model_id": "ibm/granite-3-8b-instruct",
        "hap_filter": {
          "output": {
            "enabled": true
          }
        }
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "Connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "search_routing": {
        "target": "conversational_search"
      },
      "spelling_auto_correct": true
    },
    "learning_opt_out": true
  },
  "description": "created for assistant 15d3eb55-741d-4c7c-a093-f8c5d0177228",
  "assistant_id": "15d3eb55-741d-4c7c-a093-f8c5d0177228",
  "workspace_id": "655d71d7-2e93-4595-b465-205f2a20b4a2",
  "dialog_settings": {},
  "next_snapshot_version": "1",
  "environment_id": "728fa485-0460-420d-97c6-c71ecb75ee4a"
}